<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>WebAPI</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test -->
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>3.1.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.jolokia</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.43.0</version>
                <configuration>
                    <images>
                        <!-- HTTP Service image holding the FAT-Jar with embedded tomcat -->
                        <image>
                            <alias>service</alias>
                            <name>jolokia/${project.artifactId}-rhuss:${project.version}</name>
                            <build>
                                <from>java:8u40</from>
                                <assembly>
                                    <descriptor>assembly.xml</descriptor>
                                </assembly>
                                <ports>
                                    <port>8080</port>
                                </ports>
                                <command>java -Djava.security.egd=file:/dev/./urandom
                                    -jar /maven/docker-sample.jar</command>
                            </build>

                            <!-- Running the container -->
                            <run>
                                <ports>
                                    <port>service.port:8080</port>
                                </ports>
                                <links>
                                    <link>db</link>
                                </links>
                            </run>
                        </image>


                        <!-- PostgresSQL Image -->
                        <image>
                            <alias>db</alias>
                            <name>postgres:9</name>
                            <run>
                                <wait>
                                    <log>database system is ready to accept connections</log>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>

